@model IEnumerable<IMS.Models.OrderHeader>
@{
    ViewBag.Title = "Order Details";

}

@{
    var status = Context.Request.QueryString["status"];
    var inprocess = "";
    var shipped = "";
    var all = "";
    var approved = "";
    var cancelled = "";
    var delivered = "";
    var refunded = "";

    switch (status)
    {
        case "Approved":
            approved = "active text-white";
            break;
        case "InProcess":
            inprocess = "active text-white";
            break;
        case "Shipped":
            shipped = "active text-white";
            break;
        case "Cancelled":
            cancelled = "active text-white";
            break;
        case "Delivered":
            delivered = "active text-white";
            break;
        case "Refunded":
            refunded = "active text-white";
            break;
        default:
            all = "active text-white";
            break;
    }
}
<div class="row pb-4 pt-2 mb-4">
    <div class="col-md-4">
        <h4 class="text-uppercase">My Order's</h4>
    </div>
    <div class="col-md-8 text-end">
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "Approved" })" class="btn btn-outline-secondary @approved rounded-0">
            Approved
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "InProcess" })" class="btn btn-outline-secondary @inprocess rounded-0">
            In Process
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "Shipped" })" class="btn btn-outline-secondary @shipped rounded-0">
            Shipped
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "Delivered" })" class="btn btn-outline-secondary @delivered rounded-0">
            Delivered
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "Cancelled" })" class="btn btn-outline-secondary @cancelled rounded-0">
            Cancelled
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "Refunded" })" class="btn btn-outline-secondary @refunded rounded-0">
            Refunded
        </a>
        <a href="@Url.Action("OrderDetails", "CustomerHome", new { area = "Customer", status = "All" })" class="btn btn-outline-secondary @all rounded-0">
            All
        </a>
    </div>
</div>
@if (Context.Request.QueryString["status"] == "Approved")
{
    <div class="track ">
        <div class="step active"> <span class="icon"> <i class="fa fa-check"></i> </span> <span class="text">Order confirmed</span> </div>
        <div class="step "> <span class="icon"> <i class="fa-solid fa-gift"></i> </span> <span class="text"> Packaging</span> </div>
        <div class="step "> <span class="icon"> <i class="fa-solid fa-people-carry-box"></i> </span> <span class="text"> Picked by courier</span> </div>
        <div class="step"> <span class="icon"> <i class="fa fa-truck"></i> </span> <span class="text"> On the way </span> </div>
        <div class="step"> <span class="icon"> <i class="fa fa-box"></i> </span> <span class="text">Ready for pickup</span> </div>
    </div>
}
@if (Context.Request.QueryString["status"] == "InProcess")
{
    <div class="track ">
        <div class="step active"> <span class="icon"> <i class="fa fa-check"></i> </span> <span class="text">Order confirmed</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa-solid fa-gift"></i> </span> <span class="text"> Packaging</span> </div>
        <div class="step "> <span class="icon"> <i class="fa-solid fa-people-carry-box"></i> </span> <span class="text"> Picked by courier</span> </div>
        <div class="step "> <span class="icon"> <i class="fa fa-truck"></i> </span> <span class="text"> On the way </span> </div>
        <div class="step"> <span class="icon"> <i class="fa fa-box"></i> </span> <span class="text">Ready for pickup</span> </div>
    </div>
}
@if (Context.Request.QueryString["status"] == "Shipped")
{
    <div class="track ">
        <div class="step active"> <span class="icon"> <i class="fa fa-check"></i> </span> <span class="text">Order confirmed</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa-solid fa-gift"></i> </span> <span class="text"> Packaging</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa-solid fa-people-carry-box"></i> </span> <span class="text"> Picked by courier</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa fa-truck"></i> </span> <span class="text"> On the way </span> </div>
        <div class="step"> <span class="icon"> <i class="fa fa-box"></i> </span> <span class="text">Ready for pickup</span> </div>
    </div>
}
@if (Context.Request.QueryString["status"] == "Delivered")
{
    <div class="track ">
        <div class="step active"> <span class="icon"> <i class="fa fa-check"></i> </span> <span class="text">Order confirmed</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa-solid fa-gift"></i> </span> <span class="text"> Packaging</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa-solid fa-people-carry-box"></i> </span> <span class="text"> Picked by courier</span> </div>
        <div class="step active"> <span class="icon"> <i class="fa fa-truck"></i> </span> <span class="text"> On the way </span> </div>
        <div class="step active"> <span class="icon"> <i class="fa fa-box"></i> </span> <span class="text">Ready for pickup</span> </div>
    </div>
}
@if (Context.Request.QueryString["status"] == "Cancelled")
{
    <div class="track ">
        <div class="step cancel"> <span class="icon"> <i class="fa-solid fa-xmark"></i> </span> <span class="text"> Order Cancelled</span> </div>
    </div>
}
@if (Context.Request.QueryString["status"] == "Refunded")
{
    <div class="track ">
        <div class="step cancel"> <span class="icon"> <i class="fa-solid fa-money-bill-transfer"></i> </span> <span class="text"> Money Refunded</span> </div>
    </div>
}
<div class="pt-4 mt-4"></div>
<table id="customerOrderTable" class="table table-hover table-striped">
    <thead>
        <tr>
            <th>Order Id</th>
            <th>Shop Name</th>
            <th>Order Total</th>
            <th>Order Status</th>
            <th>Payment Status</th>
            <th>Order Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderByDescending(u => u.Id))
        {
            <tr>
                <td>
                    @item.Id
                </td>
                <td>@item.Name</td>
                <td>@item.OrderTotal.ToString("C")</td>
                <td>

                    @if (item.OrderStatus == IMS.Utility.ShoppingHelper.StatusApproved)
                    {
                        <span class="badge bg-info">@item.OrderStatus</span>
                    }
                    else if (item.OrderStatus == IMS.Utility.ShoppingHelper.StatusInProces)
                    {
                        <span class="badge bg-warning text-dark">@item.OrderStatus</span>
                    }
                    else if (item.OrderStatus == IMS.Utility.ShoppingHelper.StatusShipped)
                    {
                        <span class="badge bg-secondary">@item.OrderStatus</span>
                    }
                    else if (item.OrderStatus == IMS.Utility.ShoppingHelper.StatusDelivered)
                    {
                        <span class="badge bg-success">@item.OrderStatus</span>
                    }
                    else if (item.OrderStatus == IMS.Utility.ShoppingHelper.StatusCancelled)
                    {
                        <span class="badge bg-danger">@item.OrderStatus</span>
                    }

                </td>
                <td>
                    @if (item.PaymentStatus == IMS.Utility.ShoppingHelper.StatusRefunded)
                    {
                        <span class="badge bg-danger">@item.PaymentStatus</span>
                    }
                    else
                    {
                        <span class="badge bg-success">@item.PaymentStatus</span>
                    }
                </td>
                <td>@item.OrderDate.ToString().AsDateTime().ToShortDateString()</td>
                <td class="text-end">

                    <a href="@Url.Action("Edit", "CustomerOrder", new { id = item.Id,area="Manager" })" class="btn btn-outline-dark">
                        <i class="fa-solid fa-info"></i>
                    </a>
                    <a href="@Url.Action("InvoiceForCustomer", "CustomerShopping", new { id = item.Id ,area=""})" class="btn btn-outline-dark">
                        <i class="fa-solid fa-receipt"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#customerOrderTable").DataTable({
                "columnDefs": [
                    { "orderable": false, "targets": [6] },
                    { "orderable": true, "targets": [0, 1, 2, 3, 4, 5] }
                ],
                order: [[0, 'desc']]
            });
        })</script>
}