@model IMS.Models.ViewModel.CustomerInvoiceViewModel
@{
    ViewBag.Title = "Summary";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Update", "CustomerOrder", new { area = "Manager" }, FormMethod.Post))
{
    @Html.HiddenFor(model => model.OrderHeader.Id)
    <br /><div class="container pb-5">
        <div class="card">
            <div class="card-header bg-dark text-light ml-0 p-3">
                <div class="container row">
                    <div class="col-md-10 pb-2">
                        <i class="fas fa-shopping-cart"></i> &nbsp; Order Summary
                    </div>
                    <div class="col-md-2 text-end">

                        @if (User.IsInRole("Manager"))
                        {
                            <a href="@Url.Action("Index", "CustomerOrder", new {area="Manager",status="All"})" class="btn btn-outline-info form-control btn-sm">Back to Orders</a>
                        }
                        else if (User.IsInRole("Customer"))
                        {
                            <a href="@Url.Action("Index", "CustomerHome", new {area="Customer",status="All"})" class="btn btn-outline-info form-control btn-sm">Back to Orders</a>
                        }
                        else if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("Index", "CustomerOrder", new {area="Manager",status="All"})" class="btn btn-outline-info form-control btn-sm">Back to Orders</a>
                        }

                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="container rounded p-2">
                    <div class="row">
                        <div class="col-12 col-lg-6 pb-4">
                            <div class="row">
                                <h4 class="d-flex justify-content-between align-items-center mb-3">
                                    <span class="text-dark text-uppercase">PickUp Details:</span>
                                </h4>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.Name)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.Name, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.Name, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.PhoneNumber)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.PhoneNumber, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.PhoneNumber, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.StreetAddress)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.StreetAddress, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.StreetAddress, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.City)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.City, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.City, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.Thana)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.Thana, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.Thana, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.PostalCode)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.PostalCode, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.PostalCode, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.Email)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @disabled = "disabled" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.OrderDate)</div>
                                <div class="col-9">
                                    <input type="text" value="@Model.OrderHeader.OrderDate.ToString().AsDateTime().ToShortDateString()" class="form-control" disabled />
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.PaymentDate)</div>
                                <div class="col-9">
                                    <input type="text" value="@Model.OrderHeader.PaymentDate.ToString().AsDateTime().ToShortDateString()" class="form-control" disabled />
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.Carrier)</div>
                                <div class="col-9">

                                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                    {
                                        if (Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusInProces )
                                        {
                                            @Html.TextBoxFor(model => model.OrderHeader.Carrier, new { @class = "form-control", id = "carrier", placeholder = "Order is not shipped yet!" })
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(model => model.OrderHeader.Carrier, new { @class = "form-control", id = "carrier", @disabled = "disabled", placeholder = "Order is not shipped yet!" })
                                        }

                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.OrderHeader.Carrier, new { @class = "form-control", @disabled = "disabled", placeholder = "Order is not shipped yet!" })
                                    }

                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.TrackingNumber)</div>
                                <div class="col-9">
                                    @Html.TextBoxFor(model => model.OrderHeader.TrackingNumber, new { @class = "form-control", @disabled = "disabled", placeholder="Order is not shipped yet!" })
                                </div>
                            </div>
                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.ShippingDate)</div>
                                <div class="col-9">

                                    @if (Model.OrderHeader.ShippingDate != null)
                                    {
                                        <input type="text" value="@Model.OrderHeader.ShippingDate.ToString().AsDateTime().ToShortDateString()"  class="form-control" disabled />
                                    }
                                    else
                                    {
                                        @Html.EditorFor(model => model.OrderHeader.ShippingDate, new { htmlAttributes = new { @class = "form-control", @value = "", disabled = "disabled", placeholder = "mm/dd/yyyy" } })
                                    }

                                </div>
                            </div>

                            @if (User.IsInRole("Customer") && (Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusDelivered || Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusShipped || Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusCancelled))
                            {
                                <div class="row my-1">
                                    <div class="col-3">Arrival Date</div>
                                    <div class="col-9">
                                        <input type="text" value="@Model.OrderHeader.ShippingDate.ToString().AsDateTime().AddDays(3).ToShortDateString()" class="form-control"  disabled />
                                    </div>
                                </div>
                            }

                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                <div class="row my-1">
                                    <div class="col-3">@Html.LabelFor(model => model.OrderHeader.SessionId)</div>
                                    <div class="col-9">
                                        @Html.TextBoxFor(model => model.OrderHeader.SessionId, new { @class = "form-control", @disabled = "disabled" })
                                    </div>
                                </div>
                            }

                            <div class="row my-1">
                                <div class="col-3">@Html.LabelFor(model => model.OrderHeader.PaymentStatus)</div>
                                <div class="col-9">
                                    @Html.TextBoxFor(model => model.OrderHeader.PaymentStatus, new { @class = "form-control", @disabled = "disabled" })
                                </div>
                            </div>

                            @if (Model.OrderHeader.ShippingDate == null && (User.IsInRole("Admin") || User.IsInRole("Manager")))
                            {
                                if (Model.OrderHeader.OrderStatus != IMS.Utility.ShoppingHelper.StatusCancelled)
                                {
                                    <input type="submit" class="btn btn-warning text-uppercase form-control my-1" value="Update Order Details" formaction="@Url.Action("UpdateOrderDetail", "CustomerOrder", new { area = "Manager" })" />

                                }
                            }

                        </div>
                        <div class="col-12 col-lg-5 offset-lg-1">
                            <h4 class="d-flex justify-content-between align-items-center mb-3">
                                <span class="text-dark text-uppercase">Order Summary</span>
                            </h4>

                            @if (Model.OrderHeader.OrderStatus != IMS.Utility.ShoppingHelper.StatusCancelled)
                            {
                                <label class="btn btn-outline-dark form-control my-2" id="status-@Model.OrderHeader.Id">Order Status - @Model.OrderHeader.OrderStatus</label>
                            }
                            else
                            {
                                <label class="btn btn-danger form-control my-2">Order Status - @Model.OrderHeader.OrderStatus</label>
                            }

                            <ul class="list-group mb-3">

                                @{ int i = 0;}

                                @foreach (var item in Model.Products)
                                {
                                    <li class="list-group-item d-flex justify-content-between p-2">
                                        <div class="row container">
                                            <div class="col-8">

                                                <h6 class="my-0 text-dark">@item.Name</h6>
                                                <small class="text-muted">Price : @Model.OrderDetails.ElementAt(i).Price.ToString("C")</small><br />
                                                <small class="text-muted">Quantity :@Model.OrderDetails.ElementAt(i).Count </small>
                                            </div>
                                            <div class="col-4 text-end">
                                                <p class="text-success">@((Model.OrderDetails.ElementAt(i).Price * Model.OrderDetails.ElementAt(i).Count).ToString("C"))</p>
                                            </div>
                                        </div>
                                    </li>
                                    i++;
                                }


                                <li class="list-group-item bg-dark">
                                    <div class="row container">
                                        <div class="col-6">
                                            <h5 class="text-white">TOTAL </h5>
                                        </div>
                                        <div class="col-6 text-end">
                                            <h5 class="text-white">@Model.OrderHeader.OrderTotal.ToString("C")</h5>
                                        </div>
                                    </div>
                                </li>
                            </ul>

                            @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                            {
                                if (Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusApproved)
                                {
                                    <input type="submit" class="btn btn-success form-control my-1 text-uppercase" value="Start Processing" formaction="@Url.Action("StartProcessing", "CustomerOrder", new { area = "Manager" })" />
                                }
                                else if (Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusInProces)
                                {
                                    <input type="submit" class="btn btn-primary form-control my-1 text-uppercase" value="Ship Order" formaction="@Url.Action("ShipOrder", "CustomerOrder", new { area = "Manager" })" onclick="return validateCarrierNumber();" />
                                }
                            }

                            @if (true ||@Model.OrderHeader.ShippingDate.ToString().AsDateTime().AddDays(3) <= DateTime.Now && (User.IsInRole("Admin") || User.IsInRole("Manager")) && Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusShipped)
                            {
                                <input type="submit" class="btn btn-dark form-control my-1 text-uppercase" value="Delivered Order" formaction="@Url.Action("DeliveredOrder", "CustomerOrder", new { area = "Manager" })" />
                            }

                            @if (Model.OrderHeader.OrderStatus != IMS.Utility.ShoppingHelper.StatusRefunded &&
                                Model.OrderHeader.OrderStatus != IMS.Utility.ShoppingHelper.StatusCancelled)
                            {

                                if (Model.OrderHeader.ShippingDate == null && (User.IsInRole("Admin") || User.IsInRole("Manager")))
                                {
                                    <input type="submit" class="btn btn-danger form-control my-1 text-uppercase" formaction="@Url.Action("CancelReasonPage", "CustomerOrder", new { area = "Manager" ,orderId=Model.OrderHeader.Id })" value="Cancel Order" />
                                }
                                else if ((Model.OrderHeader.ShippingDate.ToString().AsDateTime().AddDays(3) < DateTime.Now &&
                                    Model.OrderHeader.ShippingDate.ToString().AsDateTime().AddDays(10) > DateTime.Now) && User.IsInRole("Customer") &&
                                    Model.OrderHeader.OrderStatus != IMS.Utility.ShoppingHelper.StatusCancelled && Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusDelivered)
                                {
                                    <input type="submit" class="btn btn-danger form-control my-1 text-uppercase" formaction="@Url.Action("CancelReasonPage", "CustomerOrder", new { area = "Manager",orderId=Model.OrderHeader.Id })" value="Return Order" />
                                }
                            }

                            @if (User.IsInRole("Customer") && Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusApproved)
                            {
                                <div>
                                    <input type="submit" class="btn btn-danger form-control my-1 text-uppercase" formaction="@Url.Action("CancelReasonPage", "CustomerOrder", new { area = "Manager",orderId=Model.OrderHeader.Id })" value="Cancel Order" />
                                </div>
                            }

                            @if (Model.OrderHeader.OrderStatus == IMS.Utility.ShoppingHelper.StatusCancelled)
                            {
                                <div class="form-group">
                                    <label for="@Model.CancelReason.Reason" class="form-label text-danger">Cancel Reason:</label>
                                    @Html.TextAreaFor(model => model.CancelReason.Reason, new { @class = "form-control", rows = "4", @disabled = "disabled" })
                                </div>
                            }
                            

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
        function validateCarrierNumber() {

            var carrierField = document.getElementById("carrier");
            if (carrierField.value.trim() === "") {
                /*alert("Carrier Name is required.");*/
                Swal.fire({
                    icon: "error",
                    title: "Oops...",
                    text: "Carrier name is missing, write the carrier name before shipping the order!",
                });
                return false; 
            }
            var form = document.forms[0];
            form.submit();
            return true; 
        }       

    </script>
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>